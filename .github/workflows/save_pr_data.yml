name: Save PR Data per PR

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed

jobs:
  save_pr_data:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. 過去データをリモートから取得
      - name: Pull existing data from pr-data branch
        run: |
          set -e
          git fetch origin
          # ブランチが存在する場合はチェックアウト、ない場合は新規作成
          git rev-parse --verify pr-data && git checkout pr-data || git checkout -b pr-data
          # リベースしてリモートの最新履歴を取得
          git pull --rebase origin pr-data || (echo "Rebase failed, resolving manually" && git rebase --abort && git reset --hard origin/pr-data)
          mkdir -p pr_data
          cp -r pr_data/* ./pr_data || echo "No existing data to copy."

      # 3. PR情報を取得して保存
      - name: Save PR data locally
        run: |
          set -e
          PR_NUMBER="${{ github.event.pull_request.number }}"
          EVENT_TYPE="${{ github.event.action }}"
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          mkdir -p pr_data
          echo '${{ toJson(github.event) }}' | jq '.' > "pr_data/pr_${PR_NUMBER}_${EVENT_TYPE}_${TIMESTAMP}.json"
          echo "PR data saved successfully."

      # 4. GitHub Artifacts にアップロード
      - name: Upload PR data as artifact
        uses: actions/upload-artifact@v3
        with:
          name: pr_data
          path: pr_data

      # 5. データをリモートブランチに保存
      - name: Push PR data to pr-data branch
        run: |
          set -e
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          # フェッチしてリモートの状態を取得
          git fetch origin
          # ブランチが存在する場合はチェックアウト、ない場合は新規作成
          git rev-parse --verify pr-data && git checkout pr-data || git checkout -b pr-data
          # リベースして競合解消
          git pull --rebase origin pr-data || (echo "Rebase failed, resolving manually" && git rebase --abort && git reset --hard origin/pr-data)

          # データをコピー
          cp -r pr_data/* .
          
          # ステージングしてプッシュ（変更がある場合のみ）
          if [ "$(git status --porcelain)" ]; then
            git add pr_data
            git commit -m "Add PR data for PR #${PR_NUMBER} - ${EVENT_TYPE} at ${TIMESTAMP}"
            git push origin pr-data
          else
            echo "No changes to push."
          fi
