name: Save PR Data per PR

on:
  pull_request:
    types:
      - opened
      - closed
      - synchronize
    paths-ignore:
      - 'jsons/**' # jsonsディレクトリ以下の変更を無視する

jobs:
  save_pr_data:
    runs-on: ubuntu-latest

    steps:
      # リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3

      # 自己トリガーをスキップ
      - name: Skip if triggered by GitHub Actions bot
        if: ${{ github.actor == 'github-actions[bot]' }}
        run: echo "Skipping execution triggered by GitHub Actions bot."

      # PR情報を取得して保存（jsonsディレクトリに保存）
      - name: Save PR data in jsons directory
        id: save_pr_data
        run: |
          # jsonsディレクトリの作成（リポジトリ内）
          mkdir -p $GITHUB_WORKSPACE/jsons

          # 環境変数からPR番号を取得
          PR_NUMBER="${{ github.event.pull_request.number }}"

          # JSON形式でデータを保存（jsonsディレクトリに）
          echo "${{ toJson(github.event) }}" > "$GITHUB_WORKSPACE/jsons/pr_${PR_NUMBER}.json"

          # 保存したファイルの確認
          echo "Saved PR data for PR #${PR_NUMBER} as jsons/pr_${PR_NUMBER}.json"
          ls -la $GITHUB_WORKSPACE/jsons

      # 保存したデータをリポジトリのjsonsディレクトリにコミットしてプッシュ
      - name: Commit and push PR data to jsons directory
        run: |
          # Git設定を行う
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # jsonsディレクトリ内のファイルをステージング
          git add jsons

          # 変更がある場合のみコミット
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Save PR data for PR #${{ github.event.pull_request.number }}"
            git push origin HEAD
          fi

      # 保存したデータを確認
      - name: Display saved PR data
        run: |
          for file in $GITHUB_WORKSPACE/jsons/*.json; do
            echo "Content of $file:"
            cat $file
          done
