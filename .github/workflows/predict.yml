name: Predict and Evaluate Model

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed

jobs:
  predict_and_evaluate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull PR data and model from main branch
        run: |
          git fetch origin main || echo "No main branch found"
          git checkout main || git checkout -b main
          mkdir -p pr_data models results
          [ -d pr_data ] && [ "$(ls -A pr_data)" ] && echo "PR data found." || echo "No PR data found."
          [ -d models ] && [ "$(ls -A models/*.pkl 2>/dev/null)" ] && echo "Model found." || echo "No trained model found."

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run prediction
        run: |
          if [ ! -d "pr_data" ] || [ -z "$(ls -A pr_data/*.json 2>/dev/null)" ]; then
            echo "No PR JSON data found, skipping prediction."
            exit 1
          fi
          python scripts/predict.py --pr_data_dir pr_data --model_dir models/ > results/predictions.txt

      - name: Get prediction results
        run: cat results/predictions.txt

      - name: Format prediction results
        run: |
          echo "PR番号" > results/formatted_predictions.txt
          echo "------" >> results/formatted_predictions.txt
          cut -d ":" -f2 results/predictions.txt | head -n 10 >> results/formatted_predictions.txt

      - name: Post prediction results to PR
        run: |
          COMMENT_BODY="📊 **予測されたPR番号 (上位 10 件)**:\n\n"
          COMMENT_BODY+="\`\`\`\n"
          while IFS= read -r line; do
            COMMENT_BODY+="$line\n"
          done < results/formatted_predictions.txt
          COMMENT_BODY+="\`\`\`"
          echo "COMMENT_BODY<<EOF" >> $GITHUB_ENV
          echo "$COMMENT_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Add PR comment
        uses: mshick/add-pr-comment@v2
        with:
          message: ${{ env.COMMENT_BODY }}
